//指定protobuf语法版本
syntax = "proto3";
//包名
option java_package = "com.ghj.protocol";
//源文件类名
option java_outer_classname = "Msg";

message Data {

    enum DataType {
        Chat = 0;
        Login = 1;
        Logout = 2;
        Ack = 3;
        Ping = 4;
        Pong = 5;
        Register = 6;
        Routing = 7;
        Route = 8;
    }

    DataType dataType = 1;

    oneof dataBody{
        Chat chat = 2;
        Login login = 3;
        Logout logout = 4;
        Ack ack = 5;
        Ping ping = 6;
        Pong pong = 7;
    }

}

message Chat {
    int64 id = 1;
    int64 form = 2;
    int64 to = 3;
    int32 type = 4;
    ChatType chatType = 5;
    string content = 6;
    string ext = 7;
    enum ChatType {
        Single = 0;
        Group = 1;
    }
}

message Login {
    int64 id = 1;
    int64 form = 2;
}

message Logout {
    int64 id = 1;
    int64 form = 2;
}

message Register {
    int32 port = 1;
    Source source = 2;
    enum Source {
        Registry = 0;
        Router = 1;
        Proxy = 3;
        Chat = 4;
        GChat = 5;
    }
}

message Routing {
    Source source = 1;
    enum Source {
        Registry = 0;
        Router = 1;
        Proxy = 3;
        Chat = 4;
        GChat = 5;
    }
}

message Route {
    string ip = 1;
    int32 port = 2;
}

message Ping {
    int64 pingTime = 1;
}

message Pong {
    int64 pingTime = 1;
    int64 pongTime = 2;
}

message Ack {
    //关联的消息ID
    int64 msgId = 1;
    int64 from = 2;
    int64 to = 3;

    Status status = 4;

    enum Status {
        //服务器接收到客户端消息 或者客户端接收到服务器消息 一般用receive
        Receive = 0;
        //客户端接收到另一客户端的消息一般用accept
        Accept = 1;
        //客户端读取另一客户端的消息一般用Read
        Read = 2;
        //登陆成功
        LoginSuc = 3;
        //登出成功
        LogoutSuc = 4;
        //登陆失败
        LoginFail = 5;
        //登出失败
        LogoutFail = 6;
    }
}



